server.port=7002
#spring.kafka.bootstrap-servers=10.10.30.44:9092,10.10.30.45:9092,10.10.30.46:9092
spring.kafka.bootstrap-servers=10.60.95.128:9092,10.60.95.129:9092,10.60.95.173:9092
#spring.kafka.bootstrap-servers=10.60.96.160:9092,10.60.96.162:9092,10.60.96.163:9092
spring.kafka.consumer.auto-offset-reset=latest
# 默认的消费组ID
# 用来唯一标识consumer进程所在组的字符串，如果设置同样的group id，表示这些processes都是属于同一个consumer group，默认：""
spring.kafka.consumer.group-id=SdkConsumer0628
# 是否自动提交offset
spring.kafka.consumer.enable-auto-commit=true
# Kafka提供的序列化和反序列化类
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 消费端监听的topic不存在时，项目启动会报错(关掉)
spring.kafka.listener.missing-topics-fatal=false
# consumer自动向zookeeper提交offset的频率，默认：5000
spring.kafka.consumer.auto-commit-interval=5000
# consumer是通过拉取的方式向服务端拉取数据，当超过指定时间间隔max.poll.interval.ms没有向服务端发送poll()请求，而心跳heartbeat线程仍然在继续，会认为该consumer锁死，就会将该consumer退出group，并进行再分配。默认：300000
spring.kafka.consumer.properties.max.poll.interval.ms=15000
# 会话的超时限制。如果consumer在这段时间内没有发送心跳信息，则它会被认为挂掉了，并且reblance将会产生，必须在[group.min.session.timeout.ms, group.max.session.timeout.ms]范围内。默认：10000
spring.kafka.consumer.properties.session.timeout.ms=15000
# 消费超时时间，大小不能超过session.timeout.ms，默认：3000
# max.poll.records条数据需要在session.timeout.ms这个时间内处理完，默认：500
spring.kafka.consumer.heartbeat-interval=5000
# 每次poll的消息量
spring.kafka.consumer.max-poll-records=2500
# 一次fetch请求，从一个broker中取得的records最大大小。如果在从topic中第一个非空的partition取消息时，如果取到的第一个record的大小就超过这个配置时，仍然会读取这个record，也就是说在这片情况下，只会返回这一条record。默认：50 * 1024 * 1024 = 52428800
spring.kafka.consumer.properties.fetch.max.bytes=52428800
# 设置批量消费
spring.kafka.listener.type=batch
#批量消费每次最多消费多少条消息
# 在侦听器容器中运行的线程数 一般等于partition个数
spring.kafka.listener.concurrency=3
spring.kafka.topic=sdk0628
# logback控制打印日志的环境
spring.profiles.active=dev

#Redis相关配置
# Redis服务器地址
spring.redis.host=${redis.host}
# Redis服务器连接端口
spring.redis.port=${redis.port}
# Redis的保护模式密码
spring.redis.password=${redis.password}
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.lettuce.pool.max-active=${redis.lettuce.pool.max-active}
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.lettuce.pool.max-wait=${redis.lettuce.pool.max-wait}
# 连接池中的最大空闲连接
#spring.redis.lettuce.pool.max-idle=${redis.lettuce.pool.max-idle}
# 连接池中的最小空闲连接
#spring.redis.lettuce.pool.min-idle=${redis.lettuce.pool.min-idle}
# 连接超时时间（毫秒）
spring.redis.timeout=${redis.timeout}
spring.redis.testOnBorrow=${redis.testOnBorrow}
spring.redis.jedis.pool.max-active=-1
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.max-wait=500
#=========================================================
##配置缓存相关
#cache.default.expire-time=200
#cache.user.expire-time=180
#cache.user.name=test
#
#spring.redis.testOnBorrow=true
#spring.redis.jedis.pool.max-active=10
#spring.redis.jedis.pool.max-idle=8
#spring.redis.jedis.pool.max-wait=500


spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.click.driverClassName=ru.yandex.clickhouse.ClickHouseDriver
spring.datasource.click.url=jdbc:clickhouse://10.60.96.162:18123
#spring.datasource.click.url=jdbc:clickhouse://10.60.96.160:8123
spring.datasource.click.initialSize=10
spring.datasource.click.username=default
spring.datasource.click.password=test123
#spring.datasource.click.username=sdk
#spring.datasource.click.password=qMBdmBAE
spring.datasource.click.maxActive=40
spring.datasource.click.minIdle=10
spring.datasource.click.maxWait=60000
spring.datasource.click.testWhileIdle=true
spring.datasource.click.timeBetweenEvictionRunsMillis=60000
spring.datasource.click.minEvictableIdleTimeMillis=300000
spring.datasource.click.validationQuery=SELECT 1 



mybatis.type-aliases-package=com.etocrm.sdk.stream.entity
mybatis.mapper-locations=classpath:/mapper/*.xml
logging.level.com.etocrm.sdk.stream.dao=error
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#clickhouse JDBC
#spring.clickhouse.address=jdbc:clickhouse://10.10.6.33:8123,jdbc:clickhouse://10.10.6.34:8123,jdbc:clickhouse://10.10.6.35:8123
#spring.clickhouse.username=
#spring.clickhouse.password=
#spring.clickhouse.db=sdktest
#spring.clickhouse.socketTimeout=6000


